import asyncio
import httpx
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.filters import CommandStart

# üîê –¢–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = '8236071155:AAHOORv1Dfenoh5Q0KDn-EtScwhJGwaLggU'

# üß† –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã
bot = Bot(token=TOKEN)
dp = Dispatcher()

# üîò –ö–Ω–æ–ø–∫–∞
keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üí≥ Local Green Bank", callback_data="local_green")]
    ]
)

# üß™ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def start_handler(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:", reply_markup=keyboard)

# üåê –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ Bybit P2P API
async def fetch_p2p_data():
    url = "https://api2.bybit.com/fiat/otc/item/online"
    payload = {
        "userId": "",
        "tokenId": "USDT",
        "currencyId": "RUB",
        "payment": ["Local Green Bank"],
        "side": "1",  # –ü–æ–∫—É–ø–∫–∞
        "size": "10",  # –ü–æ–ª—É—á–∞–µ–º —Ö–æ—Ç—è –±—ã 11 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        "page": "1"
    }

    async with httpx.AsyncClient() as client:
        response = await client.post(url, json=payload)
        data = response.json()
        return data.get("result", {}).get("items", [])

# üì≤ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
@dp.callback_query()
async def handle_callback(callback: types.CallbackQuery):
    if callback.data == "local_green":
        offers = await fetch_p2p_data()
        selected_offers = offers[5:11]  # —Å 6 –ø–æ 11
        if not selected_offers:
            await callback.message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.")
            return
        prices = [float(offer["price"]) for offer in selected_offers]
        avg_price = sum(prices) / len(prices)
        await callback.message.answer(f"–°—Ä–µ–¥–Ω—è—è —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ USDT (6‚Äì11 —Å—Ç—Ä–æ–∫): {avg_price:.2f} RUB")

# üöÄ –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
